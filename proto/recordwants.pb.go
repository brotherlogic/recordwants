// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recordwants.proto

/*
Package recordwants is a generated protocol buffer package.

It is generated from these files:
	recordwants.proto

It has these top-level messages:
	Config
	MasterWant
	Spend
	SpendingRequest
	SpendingResponse
	UpdateRequest
	UpdateResponse
*/
package recordwants

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import godiscogs "github.com/brotherlogic/godiscogs"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	Wants  []*MasterWant `protobuf:"bytes,1,rep,name=wants" json:"wants,omitempty"`
	Budget int32         `protobuf:"varint,2,opt,name=budget" json:"budget,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetWants() []*MasterWant {
	if m != nil {
		return m.Wants
	}
	return nil
}

func (m *Config) GetBudget() int32 {
	if m != nil {
		return m.Budget
	}
	return 0
}

type MasterWant struct {
	Release   *godiscogs.Release `protobuf:"bytes,1,opt,name=release" json:"release,omitempty"`
	DateAdded int64              `protobuf:"varint,2,opt,name=date_added,json=dateAdded" json:"date_added,omitempty"`
	Staged    bool               `protobuf:"varint,3,opt,name=staged" json:"staged,omitempty"`
	Active    bool               `protobuf:"varint,4,opt,name=active" json:"active,omitempty"`
	Demoted   bool               `protobuf:"varint,5,opt,name=demoted" json:"demoted,omitempty"`
}

func (m *MasterWant) Reset()                    { *m = MasterWant{} }
func (m *MasterWant) String() string            { return proto.CompactTextString(m) }
func (*MasterWant) ProtoMessage()               {}
func (*MasterWant) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MasterWant) GetRelease() *godiscogs.Release {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *MasterWant) GetDateAdded() int64 {
	if m != nil {
		return m.DateAdded
	}
	return 0
}

func (m *MasterWant) GetStaged() bool {
	if m != nil {
		return m.Staged
	}
	return false
}

func (m *MasterWant) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *MasterWant) GetDemoted() bool {
	if m != nil {
		return m.Demoted
	}
	return false
}

type Spend struct {
	Month int32 `protobuf:"varint,1,opt,name=month" json:"month,omitempty"`
	Spend int32 `protobuf:"varint,2,opt,name=spend" json:"spend,omitempty"`
}

func (m *Spend) Reset()                    { *m = Spend{} }
func (m *Spend) String() string            { return proto.CompactTextString(m) }
func (*Spend) ProtoMessage()               {}
func (*Spend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Spend) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Spend) GetSpend() int32 {
	if m != nil {
		return m.Spend
	}
	return 0
}

type SpendingRequest struct {
}

func (m *SpendingRequest) Reset()                    { *m = SpendingRequest{} }
func (m *SpendingRequest) String() string            { return proto.CompactTextString(m) }
func (*SpendingRequest) ProtoMessage()               {}
func (*SpendingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type SpendingResponse struct {
	Spends []*Spend `protobuf:"bytes,1,rep,name=spends" json:"spends,omitempty"`
}

func (m *SpendingResponse) Reset()                    { *m = SpendingResponse{} }
func (m *SpendingResponse) String() string            { return proto.CompactTextString(m) }
func (*SpendingResponse) ProtoMessage()               {}
func (*SpendingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SpendingResponse) GetSpends() []*Spend {
	if m != nil {
		return m.Spends
	}
	return nil
}

type UpdateRequest struct {
	Want     *godiscogs.Release `protobuf:"bytes,1,opt,name=want" json:"want,omitempty"`
	KeepWant bool               `protobuf:"varint,2,opt,name=keep_want,json=keepWant" json:"keep_want,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateRequest) GetWant() *godiscogs.Release {
	if m != nil {
		return m.Want
	}
	return nil
}

func (m *UpdateRequest) GetKeepWant() bool {
	if m != nil {
		return m.KeepWant
	}
	return false
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto.RegisterType((*Config)(nil), "recordwants.Config")
	proto.RegisterType((*MasterWant)(nil), "recordwants.MasterWant")
	proto.RegisterType((*Spend)(nil), "recordwants.Spend")
	proto.RegisterType((*SpendingRequest)(nil), "recordwants.SpendingRequest")
	proto.RegisterType((*SpendingResponse)(nil), "recordwants.SpendingResponse")
	proto.RegisterType((*UpdateRequest)(nil), "recordwants.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "recordwants.UpdateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for WantService service

type WantServiceClient interface {
	GetSpending(ctx context.Context, in *SpendingRequest, opts ...grpc.CallOption) (*SpendingResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
}

type wantServiceClient struct {
	cc *grpc.ClientConn
}

func NewWantServiceClient(cc *grpc.ClientConn) WantServiceClient {
	return &wantServiceClient{cc}
}

func (c *wantServiceClient) GetSpending(ctx context.Context, in *SpendingRequest, opts ...grpc.CallOption) (*SpendingResponse, error) {
	out := new(SpendingResponse)
	err := grpc.Invoke(ctx, "/recordwants.WantService/GetSpending", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wantServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := grpc.Invoke(ctx, "/recordwants.WantService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WantService service

type WantServiceServer interface {
	GetSpending(context.Context, *SpendingRequest) (*SpendingResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
}

func RegisterWantServiceServer(s *grpc.Server, srv WantServiceServer) {
	s.RegisterService(&_WantService_serviceDesc, srv)
}

func _WantService_GetSpending_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpendingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WantServiceServer).GetSpending(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordwants.WantService/GetSpending",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WantServiceServer).GetSpending(ctx, req.(*SpendingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WantService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WantServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordwants.WantService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WantServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recordwants.WantService",
	HandlerType: (*WantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSpending",
			Handler:    _WantService_GetSpending_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _WantService_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recordwants.proto",
}

func init() { proto.RegisterFile("recordwants.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xdf, 0x6b, 0xd5, 0x30,
	0x14, 0xb6, 0xbb, 0x6b, 0xb7, 0x9d, 0xa2, 0x6e, 0x07, 0xd1, 0x72, 0xe7, 0xa0, 0xe4, 0x41, 0x8a,
	0x68, 0x87, 0x77, 0xef, 0x82, 0xec, 0xc1, 0x17, 0x45, 0xc8, 0x14, 0x1f, 0x47, 0xda, 0x1c, 0x73,
	0x8b, 0xbb, 0x4d, 0x4d, 0x72, 0xe7, 0xbf, 0x23, 0xf8, 0x8f, 0x4a, 0x92, 0x96, 0xee, 0xa2, 0xee,
	0xad, 0xdf, 0x8f, 0x7c, 0xe7, 0x7c, 0x87, 0xc2, 0x89, 0xa1, 0x56, 0x1b, 0xf9, 0x53, 0xf4, 0xce,
	0xd6, 0x83, 0xd1, 0x4e, 0x63, 0x7e, 0x87, 0x5a, 0xbe, 0x51, 0x9d, 0x5b, 0x6f, 0x9b, 0xba, 0xd5,
	0x9b, 0xf3, 0xc6, 0x68, 0xb7, 0x26, 0x73, 0xa3, 0x55, 0xd7, 0x9e, 0x2b, 0x2d, 0x3b, 0xdb, 0x6a,
	0x65, 0xe7, 0xaf, 0xf8, 0x9e, 0x7d, 0x82, 0xec, 0x52, 0xf7, 0xdf, 0x3a, 0x85, 0xaf, 0x21, 0x0d,
	0x29, 0x45, 0x52, 0x2e, 0xaa, 0x7c, 0xf5, 0xac, 0xbe, 0x3b, 0xec, 0xa3, 0xb0, 0x8e, 0xcc, 0x57,
	0xd1, 0x3b, 0x1e, 0x5d, 0xf8, 0x14, 0xb2, 0x66, 0x2b, 0x15, 0xb9, 0x62, 0xaf, 0x4c, 0xaa, 0x94,
	0x8f, 0x88, 0xfd, 0x4e, 0x00, 0x66, 0x37, 0xbe, 0x82, 0x03, 0x43, 0x37, 0x24, 0x2c, 0x15, 0x49,
	0x99, 0x54, 0xf9, 0x0a, 0xeb, 0x79, 0x05, 0x1e, 0x15, 0x3e, 0x59, 0xf0, 0x0c, 0x40, 0x0a, 0x47,
	0xd7, 0x42, 0x4a, 0x92, 0x21, 0x78, 0xc1, 0x8f, 0x3c, 0xf3, 0xce, 0x13, 0x7e, 0xa6, 0x75, 0x42,
	0x91, 0x2c, 0x16, 0x65, 0x52, 0x1d, 0xf2, 0x11, 0x79, 0x5e, 0xb4, 0xae, 0xbb, 0xa5, 0x62, 0x3f,
	0xf2, 0x11, 0x61, 0x01, 0x07, 0x92, 0x36, 0xda, 0x91, 0x2c, 0xd2, 0x20, 0x4c, 0x90, 0x5d, 0x40,
	0x7a, 0x35, 0x50, 0x2f, 0xf1, 0x09, 0xa4, 0x1b, 0xdd, 0xbb, 0x75, 0xd8, 0x2e, 0xe5, 0x11, 0x78,
	0xd6, 0x7a, 0x79, 0xec, 0x16, 0x01, 0x3b, 0x81, 0xc7, 0xe1, 0x51, 0xd7, 0x2b, 0x4e, 0x3f, 0xb6,
	0x64, 0x1d, 0x7b, 0x0b, 0xc7, 0x33, 0x65, 0x07, 0xdd, 0x5b, 0xc2, 0x97, 0x90, 0x05, 0xff, 0x74,
	0x49, 0xdc, 0xb9, 0x64, 0xb0, 0xf3, 0xd1, 0xc1, 0x3e, 0xc3, 0xc3, 0x2f, 0x83, 0x2f, 0x38, 0x06,
	0xe2, 0x0b, 0xd8, 0xf7, 0xbe, 0x7b, 0x8e, 0x15, 0x74, 0x3c, 0x85, 0xa3, 0xef, 0x44, 0xc3, 0x75,
	0x30, 0xef, 0x85, 0x72, 0x87, 0x9e, 0xf0, 0x47, 0x67, 0xc7, 0xf0, 0x68, 0x4a, 0x8d, 0x3b, 0xad,
	0x7e, 0x25, 0x90, 0x7b, 0xe9, 0x8a, 0xcc, 0x6d, 0xd7, 0x12, 0x7e, 0x80, 0xfc, 0x3d, 0xb9, 0x69,
	0x75, 0x7c, 0xfe, 0xf7, 0x8a, 0x73, 0xc9, 0xe5, 0xd9, 0x7f, 0xd4, 0x98, 0xcd, 0x1e, 0xe0, 0x25,
	0x64, 0x71, 0x1e, 0x2e, 0x77, 0xac, 0x3b, 0xd5, 0x96, 0xa7, 0xff, 0xd4, 0xa6, 0x90, 0x26, 0x0b,
	0x3f, 0xe4, 0xc5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x12, 0xce, 0x20, 0xcd, 0xe5, 0x02, 0x00,
	0x00,
}
