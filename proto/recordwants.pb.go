// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        (unknown)
// source: recordwants.proto

package recordwants

import (
	context "context"
	godiscogs "github.com/brotherlogic/godiscogs"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MasterWant_Level int32

const (
	MasterWant_UNKNOWN            MasterWant_Level = 0
	MasterWant_ANYTIME            MasterWant_Level = 1
	MasterWant_LIST               MasterWant_Level = 2
	MasterWant_ALWAYS             MasterWant_Level = 3
	MasterWant_STAGED_TO_BE_ADDED MasterWant_Level = 4
	MasterWant_NEVER              MasterWant_Level = 5
	MasterWant_BOUGHT             MasterWant_Level = 6
)

// Enum value maps for MasterWant_Level.
var (
	MasterWant_Level_name = map[int32]string{
		0: "UNKNOWN",
		1: "ANYTIME",
		2: "LIST",
		3: "ALWAYS",
		4: "STAGED_TO_BE_ADDED",
		5: "NEVER",
		6: "BOUGHT",
	}
	MasterWant_Level_value = map[string]int32{
		"UNKNOWN":            0,
		"ANYTIME":            1,
		"LIST":               2,
		"ALWAYS":             3,
		"STAGED_TO_BE_ADDED": 4,
		"NEVER":              5,
		"BOUGHT":             6,
	}
)

func (x MasterWant_Level) Enum() *MasterWant_Level {
	p := new(MasterWant_Level)
	*p = x
	return p
}

func (x MasterWant_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MasterWant_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_recordwants_proto_enumTypes[0].Descriptor()
}

func (MasterWant_Level) Type() protoreflect.EnumType {
	return &file_recordwants_proto_enumTypes[0]
}

func (x MasterWant_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MasterWant_Level.Descriptor instead.
func (MasterWant_Level) EnumDescriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{2, 0}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wants           []*MasterWant          `protobuf:"bytes,1,rep,name=wants,proto3" json:"wants,omitempty"`
	Budget          int32                  `protobuf:"varint,2,opt,name=budget,proto3" json:"budget,omitempty"`
	Spends          map[int32]*RecordSpend `protobuf:"bytes,3,rep,name=spends,proto3" json:"spends,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastSpendUpdate int64                  `protobuf:"varint,4,opt,name=last_spend_update,json=lastSpendUpdate,proto3" json:"last_spend_update,omitempty"`
	LastPush        int64                  `protobuf:"varint,5,opt,name=last_push,json=lastPush,proto3" json:"last_push,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetWants() []*MasterWant {
	if x != nil {
		return x.Wants
	}
	return nil
}

func (x *Config) GetBudget() int32 {
	if x != nil {
		return x.Budget
	}
	return 0
}

func (x *Config) GetSpends() map[int32]*RecordSpend {
	if x != nil {
		return x.Spends
	}
	return nil
}

func (x *Config) GetLastSpendUpdate() int64 {
	if x != nil {
		return x.LastSpendUpdate
	}
	return 0
}

func (x *Config) GetLastPush() int64 {
	if x != nil {
		return x.LastPush
	}
	return 0
}

type RecordSpend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cost      int32 `protobuf:"varint,1,opt,name=cost,proto3" json:"cost,omitempty"`
	DateAdded int64 `protobuf:"varint,2,opt,name=date_added,json=dateAdded,proto3" json:"date_added,omitempty"`
}

func (x *RecordSpend) Reset() {
	*x = RecordSpend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordSpend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordSpend) ProtoMessage() {}

func (x *RecordSpend) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordSpend.ProtoReflect.Descriptor instead.
func (*RecordSpend) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{1}
}

func (x *RecordSpend) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *RecordSpend) GetDateAdded() int64 {
	if x != nil {
		return x.DateAdded
	}
	return 0
}

type MasterWant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Release       *godiscogs.Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	DateAdded     int64              `protobuf:"varint,2,opt,name=date_added,json=dateAdded,proto3" json:"date_added,omitempty"`
	Staged        bool               `protobuf:"varint,3,opt,name=staged,proto3" json:"staged,omitempty"`
	Active        bool               `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	Demoted       bool               `protobuf:"varint,5,opt,name=demoted,proto3" json:"demoted,omitempty"`
	Superwant     bool               `protobuf:"varint,6,opt,name=superwant,proto3" json:"superwant,omitempty"`
	Level         MasterWant_Level   `protobuf:"varint,7,opt,name=level,proto3,enum=recordwants.MasterWant_Level" json:"level,omitempty"`
	DatePurchased int64              `protobuf:"varint,8,opt,name=date_purchased,json=datePurchased,proto3" json:"date_purchased,omitempty"`
	Dirty         bool               `protobuf:"varint,9,opt,name=dirty,proto3" json:"dirty,omitempty"`
}

func (x *MasterWant) Reset() {
	*x = MasterWant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterWant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterWant) ProtoMessage() {}

func (x *MasterWant) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterWant.ProtoReflect.Descriptor instead.
func (*MasterWant) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{2}
}

func (x *MasterWant) GetRelease() *godiscogs.Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *MasterWant) GetDateAdded() int64 {
	if x != nil {
		return x.DateAdded
	}
	return 0
}

func (x *MasterWant) GetStaged() bool {
	if x != nil {
		return x.Staged
	}
	return false
}

func (x *MasterWant) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *MasterWant) GetDemoted() bool {
	if x != nil {
		return x.Demoted
	}
	return false
}

func (x *MasterWant) GetSuperwant() bool {
	if x != nil {
		return x.Superwant
	}
	return false
}

func (x *MasterWant) GetLevel() MasterWant_Level {
	if x != nil {
		return x.Level
	}
	return MasterWant_UNKNOWN
}

func (x *MasterWant) GetDatePurchased() int64 {
	if x != nil {
		return x.DatePurchased
	}
	return 0
}

func (x *MasterWant) GetDirty() bool {
	if x != nil {
		return x.Dirty
	}
	return false
}

type Spend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month int32 `protobuf:"varint,1,opt,name=month,proto3" json:"month,omitempty"`
	Spend int32 `protobuf:"varint,2,opt,name=spend,proto3" json:"spend,omitempty"`
}

func (x *Spend) Reset() {
	*x = Spend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spend) ProtoMessage() {}

func (x *Spend) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spend.ProtoReflect.Descriptor instead.
func (*Spend) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{3}
}

func (x *Spend) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Spend) GetSpend() int32 {
	if x != nil {
		return x.Spend
	}
	return 0
}

type SpendingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SpendingRequest) Reset() {
	*x = SpendingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpendingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpendingRequest) ProtoMessage() {}

func (x *SpendingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpendingRequest.ProtoReflect.Descriptor instead.
func (*SpendingRequest) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{4}
}

type SpendingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spends []*Spend `protobuf:"bytes,1,rep,name=spends,proto3" json:"spends,omitempty"`
}

func (x *SpendingResponse) Reset() {
	*x = SpendingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpendingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpendingResponse) ProtoMessage() {}

func (x *SpendingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpendingResponse.ProtoReflect.Descriptor instead.
func (*SpendingResponse) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{5}
}

func (x *SpendingResponse) GetSpends() []*Spend {
	if x != nil {
		return x.Spends
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Want     *godiscogs.Release `protobuf:"bytes,1,opt,name=want,proto3" json:"want,omitempty"`
	KeepWant bool               `protobuf:"varint,2,opt,name=keep_want,json=keepWant,proto3" json:"keep_want,omitempty"`
	Super    bool               `protobuf:"varint,3,opt,name=super,proto3" json:"super,omitempty"`
	Level    MasterWant_Level   `protobuf:"varint,4,opt,name=level,proto3,enum=recordwants.MasterWant_Level" json:"level,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRequest) GetWant() *godiscogs.Release {
	if x != nil {
		return x.Want
	}
	return nil
}

func (x *UpdateRequest) GetKeepWant() bool {
	if x != nil {
		return x.KeepWant
	}
	return false
}

func (x *UpdateRequest) GetSuper() bool {
	if x != nil {
		return x.Super
	}
	return false
}

func (x *UpdateRequest) GetLevel() MasterWant_Level {
	if x != nil {
		return x.Level
	}
	return MasterWant_UNKNOWN
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{7}
}

type AddWantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseId int32 `protobuf:"varint,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	Superwant bool  `protobuf:"varint,2,opt,name=superwant,proto3" json:"superwant,omitempty"`
}

func (x *AddWantRequest) Reset() {
	*x = AddWantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWantRequest) ProtoMessage() {}

func (x *AddWantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWantRequest.ProtoReflect.Descriptor instead.
func (*AddWantRequest) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{8}
}

func (x *AddWantRequest) GetReleaseId() int32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *AddWantRequest) GetSuperwant() bool {
	if x != nil {
		return x.Superwant
	}
	return false
}

type AddWantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddWantResponse) Reset() {
	*x = AddWantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWantResponse) ProtoMessage() {}

func (x *AddWantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWantResponse.ProtoReflect.Descriptor instead.
func (*AddWantResponse) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{9}
}

type GetWantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseId int32 `protobuf:"varint,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
}

func (x *GetWantRequest) Reset() {
	*x = GetWantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWantRequest) ProtoMessage() {}

func (x *GetWantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWantRequest.ProtoReflect.Descriptor instead.
func (*GetWantRequest) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{10}
}

func (x *GetWantRequest) GetReleaseId() int32 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

type GetWantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Want *MasterWant `protobuf:"bytes,1,opt,name=want,proto3" json:"want,omitempty"`
}

func (x *GetWantResponse) Reset() {
	*x = GetWantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordwants_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWantResponse) ProtoMessage() {}

func (x *GetWantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordwants_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWantResponse.ProtoReflect.Descriptor instead.
func (*GetWantResponse) Descriptor() ([]byte, []int) {
	return file_recordwants_proto_rawDescGZIP(), []int{11}
}

func (x *GetWantResponse) GetWant() *MasterWant {
	if x != nil {
		return x.Want
	}
	return nil
}

var File_recordwants_proto protoreflect.FileDescriptor

var file_recordwants_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73,
	0x1a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x67, 0x6f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x67, 0x73, 0x2f, 0x67, 0x6f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d,
	0x0a, 0x05, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61,
	0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x70, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x1a, 0x53, 0x0a, 0x0b, 0x53, 0x70, 0x65, 0x6e, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x70, 0x65, 0x6e,
	0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x40, 0x0a, 0x0b,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64, 0x22, 0x9b,
	0x03, 0x0a, 0x0a, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x57, 0x61, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x77, 0x61, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x77, 0x61,
	0x6e, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x57, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x69, 0x72, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64,
	0x69, 0x72, 0x74, 0x79, 0x22, 0x66, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e,
	0x59, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4c, 0x57, 0x41, 0x59, 0x53, 0x10, 0x03, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x41, 0x47, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x42, 0x45, 0x5f, 0x41, 0x44,
	0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x45, 0x56, 0x45, 0x52, 0x10, 0x05,
	0x12, 0x0a, 0x0a, 0x06, 0x42, 0x4f, 0x55, 0x47, 0x48, 0x54, 0x10, 0x06, 0x22, 0x33, 0x0a, 0x05,
	0x53, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x77, 0x61, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73,
	0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x04, 0x77, 0x61, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x77, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x6b, 0x65, 0x65, 0x70, 0x57, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x12, 0x33, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x57, 0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x57,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x77, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x77, 0x61, 0x6e, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x57, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x77, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x77, 0x61, 0x6e, 0x74, 0x32, 0xb0, 0x02, 0x0a, 0x0b,
	0x57, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77,
	0x61, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6e,
	0x74, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recordwants_proto_rawDescOnce sync.Once
	file_recordwants_proto_rawDescData = file_recordwants_proto_rawDesc
)

func file_recordwants_proto_rawDescGZIP() []byte {
	file_recordwants_proto_rawDescOnce.Do(func() {
		file_recordwants_proto_rawDescData = protoimpl.X.CompressGZIP(file_recordwants_proto_rawDescData)
	})
	return file_recordwants_proto_rawDescData
}

var file_recordwants_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_recordwants_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_recordwants_proto_goTypes = []interface{}{
	(MasterWant_Level)(0),    // 0: recordwants.MasterWant.Level
	(*Config)(nil),           // 1: recordwants.Config
	(*RecordSpend)(nil),      // 2: recordwants.RecordSpend
	(*MasterWant)(nil),       // 3: recordwants.MasterWant
	(*Spend)(nil),            // 4: recordwants.Spend
	(*SpendingRequest)(nil),  // 5: recordwants.SpendingRequest
	(*SpendingResponse)(nil), // 6: recordwants.SpendingResponse
	(*UpdateRequest)(nil),    // 7: recordwants.UpdateRequest
	(*UpdateResponse)(nil),   // 8: recordwants.UpdateResponse
	(*AddWantRequest)(nil),   // 9: recordwants.AddWantRequest
	(*AddWantResponse)(nil),  // 10: recordwants.AddWantResponse
	(*GetWantRequest)(nil),   // 11: recordwants.GetWantRequest
	(*GetWantResponse)(nil),  // 12: recordwants.GetWantResponse
	nil, // 13: recordwants.Config.SpendsEntry
	(*godiscogs.Release)(nil), // 14: godiscogs.Release
}
var file_recordwants_proto_depIdxs = []int32{
	3,  // 0: recordwants.Config.wants:type_name -> recordwants.MasterWant
	13, // 1: recordwants.Config.spends:type_name -> recordwants.Config.SpendsEntry
	14, // 2: recordwants.MasterWant.release:type_name -> godiscogs.Release
	0,  // 3: recordwants.MasterWant.level:type_name -> recordwants.MasterWant.Level
	4,  // 4: recordwants.SpendingResponse.spends:type_name -> recordwants.Spend
	14, // 5: recordwants.UpdateRequest.want:type_name -> godiscogs.Release
	0,  // 6: recordwants.UpdateRequest.level:type_name -> recordwants.MasterWant.Level
	3,  // 7: recordwants.GetWantResponse.want:type_name -> recordwants.MasterWant
	2,  // 8: recordwants.Config.SpendsEntry.value:type_name -> recordwants.RecordSpend
	5,  // 9: recordwants.WantService.GetSpending:input_type -> recordwants.SpendingRequest
	7,  // 10: recordwants.WantService.Update:input_type -> recordwants.UpdateRequest
	9,  // 11: recordwants.WantService.AddWant:input_type -> recordwants.AddWantRequest
	11, // 12: recordwants.WantService.GetWant:input_type -> recordwants.GetWantRequest
	6,  // 13: recordwants.WantService.GetSpending:output_type -> recordwants.SpendingResponse
	8,  // 14: recordwants.WantService.Update:output_type -> recordwants.UpdateResponse
	10, // 15: recordwants.WantService.AddWant:output_type -> recordwants.AddWantResponse
	12, // 16: recordwants.WantService.GetWant:output_type -> recordwants.GetWantResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_recordwants_proto_init() }
func file_recordwants_proto_init() {
	if File_recordwants_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recordwants_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordSpend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterWant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpendingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpendingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordwants_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recordwants_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recordwants_proto_goTypes,
		DependencyIndexes: file_recordwants_proto_depIdxs,
		EnumInfos:         file_recordwants_proto_enumTypes,
		MessageInfos:      file_recordwants_proto_msgTypes,
	}.Build()
	File_recordwants_proto = out.File
	file_recordwants_proto_rawDesc = nil
	file_recordwants_proto_goTypes = nil
	file_recordwants_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WantServiceClient is the client API for WantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WantServiceClient interface {
	GetSpending(ctx context.Context, in *SpendingRequest, opts ...grpc.CallOption) (*SpendingResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	AddWant(ctx context.Context, in *AddWantRequest, opts ...grpc.CallOption) (*AddWantResponse, error)
	GetWant(ctx context.Context, in *GetWantRequest, opts ...grpc.CallOption) (*GetWantResponse, error)
}

type wantServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWantServiceClient(cc grpc.ClientConnInterface) WantServiceClient {
	return &wantServiceClient{cc}
}

func (c *wantServiceClient) GetSpending(ctx context.Context, in *SpendingRequest, opts ...grpc.CallOption) (*SpendingResponse, error) {
	out := new(SpendingResponse)
	err := c.cc.Invoke(ctx, "/recordwants.WantService/GetSpending", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wantServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/recordwants.WantService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wantServiceClient) AddWant(ctx context.Context, in *AddWantRequest, opts ...grpc.CallOption) (*AddWantResponse, error) {
	out := new(AddWantResponse)
	err := c.cc.Invoke(ctx, "/recordwants.WantService/AddWant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wantServiceClient) GetWant(ctx context.Context, in *GetWantRequest, opts ...grpc.CallOption) (*GetWantResponse, error) {
	out := new(GetWantResponse)
	err := c.cc.Invoke(ctx, "/recordwants.WantService/GetWant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WantServiceServer is the server API for WantService service.
type WantServiceServer interface {
	GetSpending(context.Context, *SpendingRequest) (*SpendingResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	AddWant(context.Context, *AddWantRequest) (*AddWantResponse, error)
	GetWant(context.Context, *GetWantRequest) (*GetWantResponse, error)
}

// UnimplementedWantServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWantServiceServer struct {
}

func (*UnimplementedWantServiceServer) GetSpending(context.Context, *SpendingRequest) (*SpendingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpending not implemented")
}
func (*UnimplementedWantServiceServer) Update(context.Context, *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedWantServiceServer) AddWant(context.Context, *AddWantRequest) (*AddWantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddWant not implemented")
}
func (*UnimplementedWantServiceServer) GetWant(context.Context, *GetWantRequest) (*GetWantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWant not implemented")
}

func RegisterWantServiceServer(s *grpc.Server, srv WantServiceServer) {
	s.RegisterService(&_WantService_serviceDesc, srv)
}

func _WantService_GetSpending_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpendingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WantServiceServer).GetSpending(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordwants.WantService/GetSpending",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WantServiceServer).GetSpending(ctx, req.(*SpendingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WantService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WantServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordwants.WantService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WantServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WantService_AddWant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddWantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WantServiceServer).AddWant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordwants.WantService/AddWant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WantServiceServer).AddWant(ctx, req.(*AddWantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WantService_GetWant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WantServiceServer).GetWant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recordwants.WantService/GetWant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WantServiceServer).GetWant(ctx, req.(*GetWantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recordwants.WantService",
	HandlerType: (*WantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSpending",
			Handler:    _WantService_GetSpending_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _WantService_Update_Handler,
		},
		{
			MethodName: "AddWant",
			Handler:    _WantService_AddWant_Handler,
		},
		{
			MethodName: "GetWant",
			Handler:    _WantService_GetWant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recordwants.proto",
}
