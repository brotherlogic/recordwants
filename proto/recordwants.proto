syntax = "proto3";

package recordwants;

import "github.com/brotherlogic/godiscogs/godiscogs.proto";

message Config {
  repeated MasterWant wants = 1;
  int32 budget = 2;
  map<int32, RecordSpend> spends = 3;
  int64 last_spend_update = 4;
  int64 last_push = 5;
}

message RecordSpend {
  int32 cost = 1;
  int64 date_added = 2;
}

message MasterWant {
  godiscogs.Release release = 1;
  int64 date_added = 2;
  bool staged = 3;
  bool active = 4;
  bool demoted = 5;
  bool superwant = 6;

  enum Level {
    UNKNOWN = 0;
    ANYTIME = 1;
    LIST = 2;
    ALWAYS = 3;
  }

  Level level = 7;
  int64 date_purchased = 8;
}

message Spend {
  int32 month = 1;
  int32 spend = 2;
}

message SpendingRequest {}

message SpendingResponse {
  repeated Spend spends = 1;
}

message UpdateRequest {
  godiscogs.Release want = 1;
  bool keep_want = 2;
  bool super = 3;
}

message UpdateResponse {}

message AddWantRequest {
  int32 release_id = 1;
  bool superwant = 2;
}

message AddWantResponse {}

service WantService {
  rpc GetSpending(SpendingRequest) returns (SpendingResponse) {};
  rpc Update(UpdateRequest) returns (UpdateResponse) {};
  rpc AddWant(AddWantRequest) returns (AddWantResponse) {};
}